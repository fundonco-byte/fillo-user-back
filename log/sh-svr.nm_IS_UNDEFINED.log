00:27:28.437 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
00:27:28.525 WARN  [Test worker] [DuplicateJsonObjectContextCustomizerFactory.java-logDuplicateJsonObjectsWarning-78] 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20240303/ebb88e8fb5122b7506d5cf1d69f1ccdb790d22a/json-20240303.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

00:27:28.536 INFO  [Test worker] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplicationTests using Java 24.0.1 with PID 360 (started by user in E:\Development\BackEnd\supportershigh-user-backend)
00:27:28.536 INFO  [Test worker] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
00:27:29.124 INFO  [Test worker] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:27:29.125 INFO  [Test worker] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
00:27:29.172 INFO  [Test worker] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:27:29.251 INFO  [Test worker] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:27:29.269 INFO  [Test worker] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 135 ms. Found 3 JDBC repository interfaces.
00:27:29.278 INFO  [Test worker] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:27:29.279 INFO  [Test worker] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
00:27:29.297 INFO  [Test worker] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:27:29.299 INFO  [Test worker] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:27:29.299 INFO  [Test worker] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:27:29.300 INFO  [Test worker] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
00:27:29.781 INFO  [Test worker] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
00:27:29.831 INFO  [Test worker] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
00:27:29.861 INFO  [Test worker] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
00:27:30.057 INFO  [Test worker] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
00:27:30.080 WARN  [Test worker] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
00:27:30.080 INFO  [Test worker] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
00:27:30.349 INFO  [Test worker] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@33a8f553
00:27:30.351 INFO  [Test worker] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
00:27:30.400 INFO  [Test worker] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
00:27:30.407 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4eace42b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f87a7c7)
00:27:30.407 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@857f1a7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@682fe17b)
00:27:30.408 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@418bdde9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13e0f380)
00:27:30.408 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@240df292) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@333efb51)
00:27:30.408 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c451c4a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38ad86b1)
00:27:30.408 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73ff7a54) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@375ff309)
00:27:30.408 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@337c0ee4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67b09e34)
00:27:30.409 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f95654c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@271a140c)
00:27:30.409 DEBUG [Test worker] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74c23525) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@176054b7)
00:27:31.090 INFO  [Test worker] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
00:27:31.301 INFO  [Test worker] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
00:27:31.681 WARN  [Test worker] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
00:27:32.347 WARN  [Test worker] [UserDetailsServiceAutoConfiguration.java-getOrDeducePassword-90] 

Using generated security password: 244eb595-7ad4-4a5c-99e8-434119b81b74

This generated password is for development use only. Your security configuration must be updated before running your application in production.

00:27:32.366 INFO  [Test worker] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
00:27:32.422 INFO  [Test worker] [SecurityConfig.java-securityFilterChain-40] [ LOCAL ] Security Active
00:27:32.502 WARN  [Test worker] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:27:32.516 WARN  [Test worker] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:27:32.523 WARN  [Test worker] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:27:33.017 INFO  [Test worker] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplicationTests in 4.907 seconds (process running for 5.811)
00:27:33.019 INFO  [Test worker] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
00:27:33.273 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
00:27:33.290 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
00:27:33.291 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
00:27:33.294 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
00:27:38.390 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
00:27:38.412 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 29036 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
00:27:38.413 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
00:27:38.439 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
00:27:38.439 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
00:27:38.929 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:27:38.930 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
00:27:38.959 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:27:39.016 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:27:39.031 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 97 ms. Found 3 JDBC repository interfaces.
00:27:39.038 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:27:39.038 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
00:27:39.053 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:27:39.054 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:27:39.055 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:27:39.056 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
00:27:39.571 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
00:27:39.581 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
00:27:39.582 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
00:27:39.582 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
00:27:39.623 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
00:27:39.623 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1183 ms
00:27:39.742 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
00:27:39.777 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
00:27:39.799 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
00:27:39.990 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
00:27:40.012 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
00:27:40.012 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
00:27:40.239 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b28c7d9
00:27:40.239 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
00:27:40.283 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
00:27:40.288 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fc2f940) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bce91d5)
00:27:40.289 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74d656b9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22aab98b)
00:27:40.289 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4a4c67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5452cc2)
00:27:40.289 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4360c14d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34715e4b)
00:27:40.289 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2cc015d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f0fb0)
00:27:40.289 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45e0dc5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5d51ac)
00:27:40.289 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@571f95b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2fd52268)
00:27:40.289 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9401fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7dd5fdf4)
00:27:40.289 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56cc75cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@500ccb1c)
00:27:40.847 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
00:27:41.020 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
00:27:41.314 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
00:27:41.670 WARN  [restartedMain] [UserDetailsServiceAutoConfiguration.java-getOrDeducePassword-90] 

Using generated security password: d2d04a08-0fda-4d90-9671-81f46c2806cd

This generated password is for development use only. Your security configuration must be updated before running your application in production.

00:27:41.675 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
00:27:41.706 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-40] [ LOCAL ] Security Active
00:27:41.741 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:27:41.750 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:27:41.755 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:27:41.935 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
00:27:42.072 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
00:27:42.084 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
00:27:42.089 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 4.011 seconds (process running for 4.485)
00:27:42.090 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
00:27:54.936 INFO  [http-nio-8093-exec-2] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
00:27:54.936 INFO  [http-nio-8093-exec-2] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
00:27:54.937 INFO  [http-nio-8093-exec-2] [FrameworkServlet.java-initServletBean-554] Completed initialization in 1 ms
00:28:54.552 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
00:28:54.554 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
00:28:54.556 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
00:28:54.576 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
00:28:54.579 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
00:28:54.580 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
00:28:58.520 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
00:28:58.546 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 23844 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
00:28:58.546 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
00:28:58.575 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
00:28:58.575 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
00:28:59.083 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:28:59.084 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
00:28:59.115 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:28:59.180 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:28:59.198 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 110 ms. Found 3 JDBC repository interfaces.
00:28:59.206 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:28:59.206 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
00:28:59.222 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:28:59.223 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:28:59.223 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:28:59.223 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
00:28:59.754 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
00:28:59.762 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
00:28:59.764 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
00:28:59.764 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
00:28:59.802 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
00:28:59.802 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1227 ms
00:28:59.917 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
00:28:59.953 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
00:28:59.975 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
00:29:00.154 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
00:29:00.172 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
00:29:00.172 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
00:29:00.386 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b28c7d9
00:29:00.388 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
00:29:00.425 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
00:29:00.429 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fc2f940) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bce91d5)
00:29:00.430 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74d656b9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22aab98b)
00:29:00.430 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4a4c67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5452cc2)
00:29:00.430 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4360c14d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34715e4b)
00:29:00.430 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2cc015d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f0fb0)
00:29:00.430 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45e0dc5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b5d51ac)
00:29:00.430 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@571f95b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2fd52268)
00:29:00.430 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9401fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7dd5fdf4)
00:29:00.430 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56cc75cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@500ccb1c)
00:29:00.990 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
00:29:01.162 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
00:29:01.470 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
00:29:01.852 WARN  [restartedMain] [UserDetailsServiceAutoConfiguration.java-getOrDeducePassword-90] 

Using generated security password: 1af04a0a-ed6d-45cb-8f0f-e1b90e895b99

This generated password is for development use only. Your security configuration must be updated before running your application in production.

00:29:01.857 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
00:29:01.888 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-40] [ LOCAL ] Security Active
00:29:01.924 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:29:01.934 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:29:01.940 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:29:02.116 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
00:29:02.250 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
00:29:02.263 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
00:29:02.268 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 4.081 seconds (process running for 4.543)
00:29:02.269 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
00:29:15.973 INFO  [http-nio-8093-exec-1] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
00:29:15.974 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
00:29:15.974 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-554] Completed initialization in 0 ms
00:29:16.091 WARN  [http-nio-8093-exec-1] [AbstractHandlerExceptionResolver.java-logException-254] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [1] in public org.springframework.http.ResponseEntity<sh.user.supportershighuserbackend.share.ResponseBody> sh.user.supportershighuserbackend.member.controller.MemberController.authorizeEmail(jakarta.servlet.http.HttpServletRequest,sh.user.supportershighuserbackend.member.request.AuthorizeEmailRequestDto): [Field error in object 'authorizeEmailRequestDto' on field 'email': rejected value [wlstpgns51]; codes [Email.authorizeEmailRequestDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [authorizeEmailRequestDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@30a241ed,.*]; default message [이메일 정보가 옳바르지 않습니다.]] ]
00:29:33.323 INFO  [http-nio-8093-exec-4] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
00:29:33.324 INFO  [http-nio-8093-exec-4] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : authorizeEmail, 파라미터 : [request, authorizeEmailRequestDto]
00:29:33.324 INFO  [http-nio-8093-exec-4] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
00:29:33.324 INFO  [http-nio-8093-exec-4] [MemberController.java-authorizeEmail-52] [Member] 이메일 인증
00:29:33.324 INFO  [http-nio-8093-exec-4] [MemberService.java-authorizeEmail-139] 이메일 인증 service
00:29:33.357 INFO  [http-nio-8093-exec-4] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.authorizeEmail(HttpServletRequest,AuthorizeEmailRequestDto) 실행 시간 : 33 ms
00:29:33.357 INFO  [http-nio-8093-exec-4] [MethodCallMonitorAspect.java-methodCallLog-32] authorizeEmail 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
00:31:48.243 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
00:31:48.245 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
00:31:48.247 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
00:31:48.265 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
00:31:48.267 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
00:31:48.269 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
00:31:51.761 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
00:31:51.782 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 8796 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
00:31:51.783 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
00:31:51.811 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
00:31:51.811 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
00:31:52.360 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:31:52.360 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
00:31:52.391 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:31:52.447 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:31:52.467 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 98 ms. Found 3 JDBC repository interfaces.
00:31:52.473 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:31:52.474 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
00:31:52.490 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:31:52.491 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:31:52.491 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:31:52.491 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
00:31:52.949 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
00:31:52.958 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
00:31:52.959 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
00:31:52.959 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
00:31:52.994 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
00:31:52.994 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1183 ms
00:31:53.105 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
00:31:53.136 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
00:31:53.157 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
00:31:53.355 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
00:31:53.376 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
00:31:53.377 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
00:31:53.594 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d88dbdf
00:31:53.596 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
00:31:53.633 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
00:31:53.637 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45e0dc5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b5d51ac)
00:31:53.637 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@571f95b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fd52268)
00:31:53.637 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c9401fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7dd5fdf4)
00:31:53.637 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56cc75cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@500ccb1c)
00:31:53.637 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cdb933f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e33e70d)
00:31:53.637 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7be48109) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d06e142)
00:31:53.638 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d04c1b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cde4494)
00:31:53.638 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ed7acf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@799b8701)
00:31:53.638 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@52b9f0f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c6de4d2)
00:31:54.168 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
00:31:54.351 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
00:31:54.670 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
00:31:55.031 WARN  [restartedMain] [UserDetailsServiceAutoConfiguration.java-getOrDeducePassword-90] 

Using generated security password: 46407fd8-c6b6-4861-a796-8a1ce8653140

This generated password is for development use only. Your security configuration must be updated before running your application in production.

00:31:55.037 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
00:31:55.071 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-40] [ LOCAL ] Security Active
00:31:55.107 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:31:55.117 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:31:55.121 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:31:55.289 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
00:31:55.423 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
00:31:55.436 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
00:31:55.441 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 3.989 seconds (process running for 4.424)
00:31:55.442 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
00:31:59.671 INFO  [http-nio-8093-exec-3] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
00:31:59.672 INFO  [http-nio-8093-exec-3] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
00:31:59.672 INFO  [http-nio-8093-exec-3] [FrameworkServlet.java-initServletBean-554] Completed initialization in 0 ms
00:31:59.778 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
00:31:59.779 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : authorizeEmail, 파라미터 : [request, authorizeEmailRequestDto]
00:31:59.780 INFO  [http-nio-8093-exec-3] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
00:31:59.780 INFO  [http-nio-8093-exec-3] [MemberController.java-authorizeEmail-52] [Member] 이메일 인증
00:31:59.781 INFO  [http-nio-8093-exec-3] [MemberService.java-authorizeEmail-139] 이메일 인증 service
00:31:59.813 INFO  [http-nio-8093-exec-3] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.authorizeEmail(HttpServletRequest,AuthorizeEmailRequestDto) 실행 시간 : 33 ms
00:31:59.813 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-32] authorizeEmail 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
00:35:26.417 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
00:35:26.418 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
00:35:26.421 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
00:35:26.438 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
00:35:26.440 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
00:35:26.442 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
00:35:30.261 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
00:35:30.288 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 28096 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
00:35:30.289 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
00:35:30.318 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
00:35:30.318 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
00:35:30.817 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:35:30.818 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
00:35:30.847 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:35:30.909 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
00:35:30.924 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 102 ms. Found 3 JDBC repository interfaces.
00:35:30.931 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
00:35:30.931 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
00:35:30.945 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:35:30.946 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:35:30.947 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
00:35:30.947 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
00:35:31.406 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
00:35:31.414 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
00:35:31.415 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
00:35:31.415 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
00:35:31.450 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
00:35:31.450 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1132 ms
00:35:31.558 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
00:35:31.589 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
00:35:31.609 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
00:35:31.784 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
00:35:31.803 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
00:35:31.803 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
00:35:32.018 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@edd6f73
00:35:32.019 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
00:35:32.055 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
00:35:32.058 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@202ce646) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7e293b48)
00:35:32.058 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68b386c5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@548718f9)
00:35:32.058 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13decaf9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@241a50b1)
00:35:32.058 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@506b6f59) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cc7f57d)
00:35:32.058 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@592b691e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2fc23552)
00:35:32.058 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24d89654) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2737f3af)
00:35:32.060 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25d60dce) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b00d483)
00:35:32.060 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b0a8b81) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6338a5c4)
00:35:32.060 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76957c10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b2c0a8d)
00:35:32.587 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
00:35:32.772 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
00:35:33.070 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
00:35:33.426 WARN  [restartedMain] [UserDetailsServiceAutoConfiguration.java-getOrDeducePassword-90] 

Using generated security password: d04966d6-25b3-4489-a119-943c1fa1247e

This generated password is for development use only. Your security configuration must be updated before running your application in production.

00:35:33.431 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
00:35:33.463 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-40] [ LOCAL ] Security Active
00:35:33.502 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:35:33.510 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:35:33.515 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:35:33.685 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
00:35:33.815 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
00:35:33.828 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
00:35:33.832 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 3.866 seconds (process running for 4.286)
00:35:33.834 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
00:35:36.352 INFO  [http-nio-8093-exec-2] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
00:35:36.352 INFO  [http-nio-8093-exec-2] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
00:35:36.352 INFO  [http-nio-8093-exec-2] [FrameworkServlet.java-initServletBean-554] Completed initialization in 0 ms
00:35:36.455 INFO  [http-nio-8093-exec-2] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
00:35:36.456 INFO  [http-nio-8093-exec-2] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : authorizeEmail, 파라미터 : [request, authorizeEmailRequestDto]
00:35:36.457 INFO  [http-nio-8093-exec-2] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
00:35:36.457 INFO  [http-nio-8093-exec-2] [MemberController.java-authorizeEmail-52] [Member] 이메일 인증
00:35:36.457 INFO  [http-nio-8093-exec-2] [MemberService.java-authorizeEmail-139] 이메일 인증 service
00:35:42.737 INFO  [http-nio-8093-exec-2] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.authorizeEmail(HttpServletRequest,AuthorizeEmailRequestDto) 실행 시간 : 6280 ms
00:35:42.737 INFO  [http-nio-8093-exec-2] [MethodCallMonitorAspect.java-methodCallLog-32] authorizeEmail 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
01:00:17.584 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
01:00:17.586 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
01:00:17.588 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
01:00:17.606 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
01:00:17.608 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
01:00:17.609 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
01:26:42.381 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
01:26:42.416 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 10620 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
01:26:42.417 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
01:26:42.458 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
01:26:42.459 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
01:26:43.182 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
01:26:43.183 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
01:26:43.216 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.repository.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
01:26:43.275 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
01:26:43.293 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 105 ms. Found 3 JDBC repository interfaces.
01:26:43.300 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
01:26:43.300 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
01:26:43.315 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
01:26:43.315 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
01:26:43.317 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
01:26:43.318 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
01:26:43.780 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
01:26:43.788 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
01:26:43.789 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
01:26:43.789 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
01:26:43.820 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
01:26:43.820 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1361 ms
01:26:43.924 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
01:26:43.955 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
01:26:43.974 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
01:26:44.143 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
01:26:44.160 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
01:26:44.160 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
01:26:44.368 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5e378ab1
01:26:44.369 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
01:26:44.405 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
01:26:44.409 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@648f77f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f1e8763)
01:26:44.409 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@324e0780) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41db58a3)
01:26:44.409 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ef4b7bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45ca0699)
01:26:44.409 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77a7ba7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cff35ab)
01:26:44.410 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@674d10e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72a63c5e)
01:26:44.410 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2655c6ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@43e2ede2)
01:26:44.410 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ca73f6e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f20ae68)
01:26:44.410 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a7bd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53930b22)
01:26:44.410 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@263a1271) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c63bb30)
01:26:44.912 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
01:26:45.083 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
01:26:45.379 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
01:26:45.691 WARN  [restartedMain] [UserDetailsServiceAutoConfiguration.java-getOrDeducePassword-90] 

Using generated security password: 21d63b23-92c6-4b17-b4e2-f1dcd928e10c

This generated password is for development use only. Your security configuration must be updated before running your application in production.

01:26:45.696 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
01:26:45.728 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-38] [ LOCAL ] Security Active
01:26:45.762 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
01:26:45.771 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
01:26:45.775 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
01:26:45.935 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
01:26:46.072 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
01:26:46.084 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
01:26:46.089 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 3.984 seconds (process running for 4.486)
01:26:46.090 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
01:27:42.781 INFO  [http-nio-8093-exec-1] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
01:27:42.781 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
01:27:42.782 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-554] Completed initialization in 1 ms
01:27:42.883 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
01:27:42.884 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : loginAccount, 파라미터 : [request, response, memberLoginRequestDto]
01:27:42.884 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
01:27:42.884 INFO  [http-nio-8093-exec-1] [MemberController.java-loginAccount-73] [Member] 로그인
01:27:42.888 INFO  [http-nio-8093-exec-1] [MemberService.java-loginAccount-160] 계정 로그인 service
01:27:43.168 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.loginAccount(HttpServletRequest,HttpServletResponse,MemberLoginRequestDto) 실행 시간 : 284 ms
01:27:43.168 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-32] loginAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
01:37:22.601 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
01:37:22.603 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
01:37:22.606 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
01:37:22.624 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
01:37:22.626 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
01:37:22.627 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
01:37:26.334 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
01:37:26.356 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 31448 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
01:37:26.357 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
01:37:26.383 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
01:37:26.384 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
01:37:26.834 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
01:37:26.835 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
01:37:26.861 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.repository.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
01:37:26.922 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
01:37:26.937 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 98 ms. Found 3 JDBC repository interfaces.
01:37:26.943 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
01:37:26.943 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
01:37:26.957 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
01:37:26.957 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
01:37:26.959 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
01:37:26.959 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
01:37:27.390 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
01:37:27.398 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
01:37:27.398 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
01:37:27.399 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
01:37:27.432 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
01:37:27.432 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1048 ms
01:37:27.539 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
01:37:27.568 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
01:37:27.590 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
01:37:27.774 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
01:37:27.791 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
01:37:27.791 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
01:37:28.009 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@263955dd
01:37:28.010 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
01:37:28.046 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
01:37:28.050 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61dc9622) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24817ed)
01:37:28.050 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8dadbd5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ee81650)
01:37:28.050 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b00e829) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69b565db)
01:37:28.050 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@376f1f4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59dbc560)
01:37:28.050 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75b62fd2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37ef0702)
01:37:28.050 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78b5c3f3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fc2f940)
01:37:28.051 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3bce91d5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74d656b9)
01:37:28.051 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22aab98b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a4a4c67)
01:37:28.051 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5452cc2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4360c14d)
01:37:28.557 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
01:37:28.739 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
01:37:29.052 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
01:37:29.373 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
01:37:29.403 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-38] [ LOCAL ] Security Active
01:37:29.440 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
01:37:29.449 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
01:37:29.454 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
01:37:29.626 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
01:37:29.758 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
01:37:29.770 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
01:37:29.775 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 3.719 seconds (process running for 4.13)
01:37:29.777 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
01:37:31.712 INFO  [http-nio-8093-exec-2] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
01:37:31.713 INFO  [http-nio-8093-exec-2] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
01:37:31.713 INFO  [http-nio-8093-exec-2] [FrameworkServlet.java-initServletBean-554] Completed initialization in 0 ms
01:37:31.814 INFO  [http-nio-8093-exec-2] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
01:37:31.814 INFO  [http-nio-8093-exec-2] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : loginAccount, 파라미터 : [request, response, memberLoginRequestDto]
01:37:31.815 INFO  [http-nio-8093-exec-2] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
01:37:31.815 INFO  [http-nio-8093-exec-2] [MemberController.java-loginAccount-73] [Member] 로그인
01:37:31.819 INFO  [http-nio-8093-exec-2] [MemberService.java-loginAccount-160] 계정 로그인 service
01:37:32.009 INFO  [http-nio-8093-exec-2] [UserDetailsServiceImpl.java-loadUserByUsername-27] 유저 계정 존재 (고객) : wlstpgns51@naver.com
01:37:32.009 INFO  [http-nio-8093-exec-2] [UserDetailsServiceImpl.java-createUserDetailsOfMember-36] 회원용 createUserDetails 실행
01:37:32.062 INFO  [http-nio-8093-exec-2] [JwtTokenProvider.java-generateToken-54] 권한 정보 확인 : ROLE_client
01:37:32.126 INFO  [http-nio-8093-exec-2] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.loginAccount(HttpServletRequest,HttpServletResponse,MemberLoginRequestDto) 실행 시간 : 311 ms
01:37:32.126 INFO  [http-nio-8093-exec-2] [MethodCallMonitorAspect.java-methodCallLog-32] loginAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:04:40.226 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
02:04:40.227 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
02:04:40.230 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
02:04:40.248 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
02:04:40.250 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
02:04:40.251 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
02:04:43.934 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
02:04:43.957 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 13716 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
02:04:43.958 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
02:04:43.987 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
02:04:43.987 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
02:04:44.501 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:04:44.502 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
02:04:44.531 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.repository.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:04:44.590 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:04:44.605 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 98 ms. Found 3 JDBC repository interfaces.
02:04:44.612 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:04:44.612 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:04:44.627 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:04:44.627 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:04:44.628 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:04:44.628 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
02:04:45.063 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
02:04:45.070 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
02:04:45.071 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
02:04:45.071 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
02:04:45.102 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
02:04:45.102 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1115 ms
02:04:45.205 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
02:04:45.232 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
02:04:45.252 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
02:04:45.424 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
02:04:45.441 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
02:04:45.442 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
02:04:45.679 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3a6c7d48
02:04:45.680 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
02:04:45.717 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
02:04:45.721 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29e53d46) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a7f7075)
02:04:45.721 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28526aa8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@233d63f)
02:04:45.721 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bcc432) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5311e0c8)
02:04:45.722 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@682dc728) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74b3663c)
02:04:45.722 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10caa1cc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c0104bd)
02:04:45.722 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a139e92) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@257e936a)
02:04:45.722 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@607f82c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@241f4696)
02:04:45.722 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@722eab89) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@239a9365)
02:04:45.722 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f6f2c1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@619af691)
02:04:46.228 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02:04:46.404 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
02:04:46.704 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:04:47.021 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
02:04:47.049 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-38] [ LOCAL ] Security Active
02:04:47.082 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:04:47.091 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:04:47.095 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:04:47.248 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
02:04:47.374 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
02:04:47.387 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
02:04:47.391 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 3.758 seconds (process running for 4.174)
02:04:47.392 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
02:05:47.474 INFO  [http-nio-8093-exec-1] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
02:05:47.474 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
02:05:47.475 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-554] Completed initialization in 1 ms
02:05:47.582 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
02:05:47.583 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : loginAccount, 파라미터 : [request, response, memberLoginRequestDto]
02:05:47.583 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
02:05:47.583 INFO  [http-nio-8093-exec-1] [MemberController.java-loginAccount-73] [Member] 로그인
02:05:47.589 INFO  [http-nio-8093-exec-1] [MemberService.java-loginAccount-161] 계정 로그인 service
02:05:47.797 INFO  [http-nio-8093-exec-1] [UserDetailsServiceImpl.java-loadUserByUsername-27] 유저 계정 존재 (고객) : wlstpgns51@naver.com
02:05:47.797 INFO  [http-nio-8093-exec-1] [UserDetailsServiceImpl.java-createUserDetailsOfMember-36] 회원용 createUserDetails 실행
02:05:47.850 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-generateToken-54] 권한 정보 확인 : ROLE_client
02:05:47.911 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.loginAccount(HttpServletRequest,HttpServletResponse,MemberLoginRequestDto) 실행 시간 : 328 ms
02:05:47.911 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-32] loginAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:06:26.509 INFO  [http-nio-8093-exec-3] [JwtTokenProvider.java-validateToken-131] validateToken 함수 진입 : 토큰 Provider 에서 검증할 토큰을 가지고 왔는지 확인
02:06:26.509 INFO  [http-nio-8093-exec-3] [JwtTokenProvider.java-validateToken-134] Checking JWT Token
02:06:26.527 INFO  [http-nio-8093-exec-3] [JwtTokenProvider.java-validateToken-141] Expired JWT Token
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-08-29T17:05:47Z. Current time: 2025-08-29T17:06:26Z, a difference of 39526 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at sh.user.supportershighuserbackend.jwt.service.JwtTokenProvider.validateToken(JwtTokenProvider.java:135)
	at sh.user.supportershighuserbackend.jwt.service.JwtAuthenticationFilter.doFilter(JwtAuthenticationFilter.java:28)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at sh.user.supportershighuserbackend.configuration.AopConfig.handleRequestRejectedException(AopConfig.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:649)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:631)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.security.web.FilterChainProxy$$SpringCGLIB$$0.doFilter(<generated>)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at sh.user.supportershighuserbackend.configuration.AopConfig.handleRequestRejectedException(AopConfig.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:649)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:631)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy$$SpringCGLIB$$0.doFilter(<generated>)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at sh.user.supportershighuserbackend.configuration.AopConfig.handleRequestRejectedException(AopConfig.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:649)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:631)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy$$SpringCGLIB$$0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
02:06:26.529 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
02:06:26.530 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : logoutAccount, 파라미터 : [request, response]
02:06:26.530 INFO  [http-nio-8093-exec-3] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
02:06:26.530 INFO  [http-nio-8093-exec-3] [MemberController.java-logoutAccount-91] [Member] 로그아웃
02:06:26.531 INFO  [http-nio-8093-exec-3] [MemberService.java-logoutAccount-225] 계정 로그아웃 service
02:06:26.541 INFO  [http-nio-8093-exec-3] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.logoutAccount(HttpServletRequest,HttpServletResponse) 실행 시간 : 11 ms
02:06:26.542 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-32] logoutAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:13:06.137 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
02:13:06.139 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
02:13:06.141 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
02:13:06.161 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
02:13:06.163 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
02:13:06.164 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
02:13:09.994 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
02:13:10.017 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 33776 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
02:13:10.017 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
02:13:10.045 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
02:13:10.045 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
02:13:10.516 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:13:10.517 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
02:13:10.547 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.repository.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:13:10.600 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:13:10.614 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 94 ms. Found 3 JDBC repository interfaces.
02:13:10.622 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:13:10.622 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:13:10.635 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:13:10.636 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:13:10.638 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:13:10.638 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
02:13:11.074 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
02:13:11.081 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
02:13:11.082 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
02:13:11.082 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
02:13:11.115 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
02:13:11.115 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1070 ms
02:13:11.215 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
02:13:11.248 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
02:13:11.266 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
02:13:11.437 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
02:13:11.454 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
02:13:11.455 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
02:13:11.663 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35c8250e
02:13:11.664 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
02:13:11.700 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
02:13:11.703 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@20718b66) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ee0d5a7)
02:13:11.703 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5aa4ec94) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a65afca)
02:13:11.703 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56e3315b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e268bcd)
02:13:11.703 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@239b0cd1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74d7ec97)
02:13:11.705 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b7162bf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5163eeff)
02:13:11.705 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a658d86) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@611d6f09)
02:13:11.705 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51498d0f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f9395cf)
02:13:11.705 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@199c2206) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13f3631b)
02:13:11.705 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e4fb59f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df17474)
02:13:12.214 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02:13:12.388 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
02:13:12.690 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:13:13.009 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
02:13:13.041 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-38] [ LOCAL ] Security Active
02:13:13.078 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:13:13.087 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:13:13.091 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:13:13.257 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
02:13:13.397 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
02:13:13.410 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
02:13:13.414 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 3.703 seconds (process running for 4.105)
02:13:13.415 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
02:13:17.203 INFO  [http-nio-8093-exec-3] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
02:13:17.203 INFO  [http-nio-8093-exec-3] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
02:13:17.204 INFO  [http-nio-8093-exec-3] [FrameworkServlet.java-initServletBean-554] Completed initialization in 1 ms
02:13:17.318 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
02:13:17.318 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : loginAccount, 파라미터 : [request, response, memberLoginRequestDto]
02:13:17.320 INFO  [http-nio-8093-exec-3] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
02:13:17.320 INFO  [http-nio-8093-exec-3] [MemberController.java-loginAccount-73] [Member] 로그인
02:13:17.324 INFO  [http-nio-8093-exec-3] [MemberService.java-loginAccount-161] 계정 로그인 service
02:13:17.526 INFO  [http-nio-8093-exec-3] [UserDetailsServiceImpl.java-loadUserByUsername-27] 유저 계정 존재 (고객) : wlstpgns51@naver.com
02:13:17.526 INFO  [http-nio-8093-exec-3] [UserDetailsServiceImpl.java-createUserDetailsOfMember-36] 회원용 createUserDetails 실행
02:13:17.579 INFO  [http-nio-8093-exec-3] [JwtTokenProvider.java-generateToken-54] 권한 정보 확인 : ROLE_client
02:13:17.646 INFO  [http-nio-8093-exec-3] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.loginAccount(HttpServletRequest,HttpServletResponse,MemberLoginRequestDto) 실행 시간 : 326 ms
02:13:17.646 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-32] loginAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:13:38.187 INFO  [http-nio-8093-exec-4] [JwtTokenProvider.java-validateToken-131] validateToken 함수 진입 : 토큰 Provider 에서 검증할 토큰을 가지고 왔는지 확인
02:13:38.187 INFO  [http-nio-8093-exec-4] [JwtTokenProvider.java-validateToken-134] Checking JWT Token
02:13:38.202 INFO  [http-nio-8093-exec-4] [JwtTokenProvider.java-validateToken-136] Valid JWT Token
02:13:38.205 INFO  [http-nio-8093-exec-4] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
02:13:38.205 INFO  [http-nio-8093-exec-4] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : logoutAccount, 파라미터 : [request, response]
02:13:38.205 INFO  [http-nio-8093-exec-4] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
02:13:38.205 INFO  [http-nio-8093-exec-4] [MemberController.java-logoutAccount-91] [Member] 로그아웃
02:13:38.207 INFO  [http-nio-8093-exec-4] [MemberService.java-logoutAccount-225] 계정 로그아웃 service
02:13:38.207 INFO  [http-nio-8093-exec-4] [JwtTokenProvider.java-getMemberFromAuthentication-116] authentication 계정 이메일 아이디 - wlstpgns51@naver.com
02:13:38.210 INFO  [http-nio-8093-exec-4] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.logoutAccount(HttpServletRequest,HttpServletResponse) 실행 시간 : 5 ms
02:13:38.211 INFO  [http-nio-8093-exec-4] [MethodCallMonitorAspect.java-methodCallLog-32] logoutAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:16:05.855 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
02:16:05.856 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
02:16:05.859 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
02:16:05.877 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
02:16:05.879 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
02:16:05.880 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
02:16:09.706 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
02:16:09.729 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 15112 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
02:16:09.731 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
02:16:09.758 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
02:16:09.758 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
02:16:10.226 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:16:10.226 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
02:16:10.254 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.repository.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:16:10.306 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:16:10.325 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 95 ms. Found 3 JDBC repository interfaces.
02:16:10.332 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:16:10.332 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:16:10.347 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:16:10.347 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:16:10.348 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:16:10.348 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
02:16:10.783 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
02:16:10.792 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
02:16:10.792 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
02:16:10.793 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
02:16:10.825 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
02:16:10.825 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1067 ms
02:16:10.932 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
02:16:10.962 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
02:16:10.980 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
02:16:11.153 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
02:16:11.173 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
02:16:11.174 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
02:16:11.382 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@350c5d89
02:16:11.384 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
02:16:11.430 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
02:16:11.434 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74b3663c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10caa1cc)
02:16:11.435 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c0104bd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a139e92)
02:16:11.435 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@257e936a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@607f82c8)
02:16:11.435 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@241f4696) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@722eab89)
02:16:11.435 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@239a9365) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f6f2c1c)
02:16:11.435 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@619af691) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@666f7bc8)
02:16:11.435 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1119cddb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57500c28)
02:16:11.435 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6148562d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ce4d0f7)
02:16:11.435 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@234cbda5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74aad4a8)
02:16:12.005 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02:16:12.183 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
02:16:12.198 WARN  [restartedMain] [AbstractApplicationContext.java-refresh-635] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main\sh\user\supportershighuserbackend\configuration\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'jwtTokenProvider' defined in file [E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main\sh\user\supportershighuserbackend\jwt\service\JwtTokenProvider.class]: Failed to instantiate [sh.user.supportershighuserbackend.jwt.service.JwtTokenProvider]: No default constructor found
02:16:12.198 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
02:16:12.200 INFO  [restartedMain] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
02:16:12.204 INFO  [restartedMain] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
02:16:12.205 INFO  [restartedMain] [DirectJDKLog.java-log-168] Stopping service [Tomcat]
02:16:12.215 INFO  [restartedMain] [ConditionEvaluationReportLogger.java-logMessage-82] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
02:16:12.233 ERROR [restartedMain] [SpringApplication.java-reportFailure-857] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main\sh\user\supportershighuserbackend\configuration\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'jwtTokenProvider' defined in file [E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main\sh\user\supportershighuserbackend\jwt\service\JwtTokenProvider.class]: Failed to instantiate [sh.user.supportershighuserbackend.jwt.service.JwtTokenProvider]: No default constructor found
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at sh.user.supportershighuserbackend.SupportershighUserBackendApplication.main(SupportershighUserBackendApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtTokenProvider' defined in file [E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main\sh\user\supportershighuserbackend\jwt\service\JwtTokenProvider.class]: Failed to instantiate [sh.user.supportershighuserbackend.jwt.service.JwtTokenProvider]: No default constructor found
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1242)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 24 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [sh.user.supportershighuserbackend.jwt.service.JwtTokenProvider]: No default constructor found
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:119)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1351)
	... 35 common frames omitted
Caused by: java.lang.NoSuchMethodException: sh.user.supportershighuserbackend.jwt.service.JwtTokenProvider.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3218)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2493)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:115)
	... 36 common frames omitted
02:16:49.921 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
02:16:49.946 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 25460 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
02:16:49.947 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
02:16:49.975 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
02:16:49.975 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
02:16:50.497 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:16:50.498 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
02:16:50.529 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.repository.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:16:50.594 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:16:50.613 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 110 ms. Found 3 JDBC repository interfaces.
02:16:50.618 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:16:50.619 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:16:50.637 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:16:50.637 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:16:50.638 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:16:50.638 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
02:16:51.128 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
02:16:51.136 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
02:16:51.138 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
02:16:51.138 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
02:16:51.171 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
02:16:51.172 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1196 ms
02:16:51.278 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
02:16:51.311 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
02:16:51.332 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
02:16:51.503 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
02:16:51.521 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
02:16:51.521 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
02:16:51.860 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b3b53b2
02:16:51.861 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
02:16:51.901 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
02:16:51.905 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cc015d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f0fb0)
02:16:51.905 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45e0dc5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b5d51ac)
02:16:51.905 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@571f95b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fd52268)
02:16:51.905 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c9401fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7dd5fdf4)
02:16:51.905 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56cc75cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@500ccb1c)
02:16:51.906 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cdb933f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e33e70d)
02:16:51.906 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7be48109) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d06e142)
02:16:51.906 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d04c1b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cde4494)
02:16:51.906 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ed7acf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@799b8701)
02:16:52.423 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02:16:52.596 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
02:16:52.892 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:16:53.222 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
02:16:53.252 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-38] [ LOCAL ] Security Active
02:16:53.299 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:16:53.311 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:16:53.318 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:16:53.537 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
02:16:53.676 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
02:16:53.689 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
02:16:53.694 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 4.078 seconds (process running for 4.498)
02:16:53.695 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
02:16:56.756 INFO  [http-nio-8093-exec-1] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
02:16:56.756 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
02:16:56.757 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-554] Completed initialization in 1 ms
02:16:56.773 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-validateToken-135] validateToken 함수 진입 : 토큰 Provider 에서 검증할 토큰을 가지고 왔는지 확인
02:16:56.773 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-validateToken-138] Checking JWT Token
02:16:56.778 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-validateToken-149] JWT claims string is empty.
java.lang.IllegalArgumentException: signing key cannot be null.
	at io.jsonwebtoken.lang.Assert.notNull(Assert.java:82)
	at io.jsonwebtoken.impl.DefaultJwtParserBuilder.setSigningKey(DefaultJwtParserBuilder.java:165)
	at sh.user.supportershighuserbackend.jwt.service.JwtTokenProvider.validateToken(JwtTokenProvider.java:139)
	at sh.user.supportershighuserbackend.jwt.service.JwtAuthenticationFilter.doFilter(JwtAuthenticationFilter.java:28)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at sh.user.supportershighuserbackend.configuration.AopConfig.handleRequestRejectedException(AopConfig.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:649)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:631)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.security.web.FilterChainProxy$$SpringCGLIB$$0.doFilter(<generated>)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at sh.user.supportershighuserbackend.configuration.AopConfig.handleRequestRejectedException(AopConfig.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:649)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:631)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy$$SpringCGLIB$$0.doFilter(<generated>)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at sh.user.supportershighuserbackend.configuration.AopConfig.handleRequestRejectedException(AopConfig.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:649)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:631)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy$$SpringCGLIB$$0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
02:16:56.795 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
02:16:56.796 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : logoutAccount, 파라미터 : [request, response]
02:16:56.796 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
02:16:56.796 INFO  [http-nio-8093-exec-1] [MemberController.java-logoutAccount-91] [Member] 로그아웃
02:16:56.802 INFO  [http-nio-8093-exec-1] [MemberService.java-logoutAccount-225] 계정 로그아웃 service
02:16:56.806 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.logoutAccount(HttpServletRequest,HttpServletResponse) 실행 시간 : 10 ms
02:16:56.806 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-32] logoutAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:18:28.165 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
02:18:28.166 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
02:18:28.169 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
02:18:28.187 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
02:18:28.188 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
02:18:28.189 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
02:18:31.912 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
02:18:31.935 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 1780 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
02:18:31.935 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
02:18:31.962 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
02:18:31.962 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
02:18:32.426 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:18:32.426 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
02:18:32.454 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.repository.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:18:32.507 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:18:32.521 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 90 ms. Found 3 JDBC repository interfaces.
02:18:32.526 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:18:32.527 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:18:32.540 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:18:32.542 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:18:32.542 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:18:32.542 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
02:18:32.982 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
02:18:32.990 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
02:18:32.991 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
02:18:32.991 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
02:18:33.022 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
02:18:33.022 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1060 ms
02:18:33.128 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
02:18:33.157 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
02:18:33.176 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
02:18:33.348 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
02:18:33.365 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
02:18:33.365 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
02:18:33.574 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d878d74
02:18:33.575 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
02:18:33.610 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
02:18:33.614 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b0a8b81) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6338a5c4)
02:18:33.614 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76957c10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b2c0a8d)
02:18:33.614 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4455c2ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@62654921)
02:18:33.614 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f4ddc81) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34bed187)
02:18:33.614 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5e960768) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@167261da)
02:18:33.614 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@470a0e41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5faddce)
02:18:33.615 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6bb9275e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ec0e742)
02:18:33.615 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79af94dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ae8228b)
02:18:33.615 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8c9735f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@615a6ff3)
02:18:34.115 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02:18:34.284 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
02:18:34.578 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:18:34.893 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
02:18:34.923 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-38] [ LOCAL ] Security Active
02:18:34.958 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:18:34.966 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:18:34.971 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:18:35.128 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
02:18:35.261 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
02:18:35.275 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
02:18:35.278 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 3.65 seconds (process running for 4.045)
02:18:35.280 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
02:18:38.662 INFO  [http-nio-8093-exec-1] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
02:18:38.662 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
02:18:38.663 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-554] Completed initialization in 0 ms
02:18:38.679 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-validateToken-134] validateToken 함수 진입 : 토큰 Provider 에서 검증할 토큰을 가지고 왔는지 확인
02:18:38.679 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-validateToken-137] Checking JWT Token
02:18:38.714 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-validateToken-139] Valid JWT Token
02:18:38.736 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
02:18:38.737 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : logoutAccount, 파라미터 : [request, response]
02:18:38.737 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
02:18:38.737 INFO  [http-nio-8093-exec-1] [MemberController.java-logoutAccount-91] [Member] 로그아웃
02:18:38.743 INFO  [http-nio-8093-exec-1] [MemberService.java-logoutAccount-225] 계정 로그아웃 service
02:18:38.744 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-getMemberFromAuthentication-119] authentication 계정 이메일 아이디 - wlstpgns51@naver.com
02:18:38.867 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.logoutAccount(HttpServletRequest,HttpServletResponse) 실행 시간 : 129 ms
02:18:38.867 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-32] logoutAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:20:18.961 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
02:20:18.962 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
02:20:18.965 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
02:20:18.983 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
02:20:18.985 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
02:20:18.986 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
02:20:22.612 INFO  [background-preinit] [Version.java-<clinit>-21] HV000001: Hibernate Validator 8.0.2.Final
02:20:22.635 INFO  [restartedMain] [StartupInfoLogger.java-logStarting-53] Starting SupportershighUserBackendApplication using Java 24.0.1 with PID 23144 (E:\Development\BackEnd\supportershigh-user-backend\build\classes\java\main started by user in E:\Development\BackEnd\supportershigh-user-backend)
02:20:22.635 INFO  [restartedMain] [SpringApplication.java-logStartupProfileInfo-652] No active profile set, falling back to 1 default profile: "default"
02:20:22.661 INFO  [restartedMain] [DeferredLog.java-logTo-252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
02:20:22.661 INFO  [restartedMain] [DeferredLog.java-logTo-252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
02:20:23.125 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:20:23.126 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
02:20:23.155 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.jwt.repository.JwtTokenRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:20:23.208 INFO  [restartedMain] [RepositoryConfigurationExtensionSupport.java-isStrictRepositoryCandidate-327] Spring Data JDBC - Could not safely identify store assignment for repository candidate interface sh.user.supportershighuserbackend.media.repository.MediaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
02:20:23.222 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 92 ms. Found 3 JDBC repository interfaces.
02:20:23.229 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-multipleStoresDetected-294] Multiple Spring Data modules found, entering strict repository configuration mode
02:20:23.230 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-145] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02:20:23.244 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'teamRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.team.repository.TeamRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:20:23.245 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'leagueRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.league.repository.LeagueRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:20:23.246 INFO  [restartedMain] [DefaultListableBeanFactory.java-logBeanDefinitionOverriding-1334] Overriding bean definition for bean 'memberRepository' with a different definition: replacing [Root bean: class=org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJdbcRepositories declared on JdbcRepositoriesRegistrar.EnableJdbcRepositoriesConfiguration] with [Root bean: class=org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in sh.user.supportershighuserbackend.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration]
02:20:23.246 INFO  [restartedMain] [RepositoryConfigurationDelegate.java-registerRepositoriesIn-213] Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
02:20:23.722 INFO  [restartedMain] [TomcatWebServer.java-initialize-111] Tomcat initialized with port 8093 (http)
02:20:23.730 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing ProtocolHandler ["http-nio-8093"]
02:20:23.731 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting service [Tomcat]
02:20:23.731 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting Servlet engine: [Apache Tomcat/10.1.43]
02:20:23.765 INFO  [restartedMain] [DirectJDKLog.java-log-168] Initializing Spring embedded WebApplicationContext
02:20:23.766 INFO  [restartedMain] [ServletWebServerApplicationContext.java-prepareWebApplicationContext-301] Root WebApplicationContext: initialization completed in 1104 ms
02:20:23.877 INFO  [restartedMain] [LogHelper.java-logPersistenceUnitInformation-31] HHH000204: Processing PersistenceUnitInfo [name: default]
02:20:23.907 INFO  [restartedMain] [Version.java-logVersion-44] HHH000412: Hibernate ORM core version 6.6.22.Final
02:20:23.926 INFO  [restartedMain] [RegionFactoryInitiator.java-initiateService-50] HHH000026: Second-level cache disabled
02:20:24.103 INFO  [restartedMain] [SpringPersistenceUnitInfo.java-addTransformer-87] No LoadTimeWeaver setup: ignoring JPA class transformer
02:20:24.121 WARN  [restartedMain] [HikariConfig.java-validateNumerics-1109] HikariPool-1 - keepaliveTime is greater than or equal to maxLifetime, disabling it.
02:20:24.121 INFO  [restartedMain] [HikariDataSource.java-getConnection-109] HikariPool-1 - Starting...
02:20:24.333 INFO  [restartedMain] [HikariPool.java-checkFailFast-580] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b3b53b2
02:20:24.334 INFO  [restartedMain] [HikariDataSource.java-getConnection-122] HikariPool-1 - Start completed.
02:20:24.371 INFO  [restartedMain] [JdbcEnvironmentInitiator.java-logConnectionInfo-163] HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.34
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
02:20:24.374 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cc015d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f0fb0)
02:20:24.374 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45e0dc5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b5d51ac)
02:20:24.374 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@571f95b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fd52268)
02:20:24.374 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c9401fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7dd5fdf4)
02:20:24.374 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56cc75cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@500ccb1c)
02:20:24.375 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cdb933f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e33e70d)
02:20:24.375 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7be48109) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d06e142)
02:20:24.375 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d04c1b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cde4494)
02:20:24.375 DEBUG [restartedMain] [DdlTypeRegistry.java-addDescriptor-64] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ed7acf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@799b8701)
02:20:24.893 INFO  [restartedMain] [JtaPlatformInitiator.java-initiateService-59] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02:20:25.071 INFO  [restartedMain] [AbstractEntityManagerFactoryBean.java-buildNativeEntityManagerFactory-447] Initialized JPA EntityManagerFactory for persistence unit 'default'
02:20:25.368 WARN  [restartedMain] [JpaBaseConfiguration.java-openEntityManagerInViewInterceptor-258] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02:20:25.681 INFO  [restartedMain] [InitializeUserDetailsBeanManagerConfigurer.java-configure-110] Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
02:20:25.709 INFO  [restartedMain] [SecurityConfig.java-securityFilterChain-38] [ LOCAL ] Security Active
02:20:25.743 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:20:25.751 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:20:25.755 WARN  [restartedMain] [CglibAopProxy.java-doValidateClass-296] Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
02:20:25.914 INFO  [restartedMain] [OptionalLiveReloadServer.java-startServer-59] LiveReload server is running on port 35729
02:20:26.044 INFO  [restartedMain] [DirectJDKLog.java-log-168] Starting ProtocolHandler ["http-nio-8093"]
02:20:26.055 INFO  [restartedMain] [TomcatWebServer.java-start-243] Tomcat started on port 8093 (http) with context path '/'
02:20:26.060 INFO  [restartedMain] [StartupInfoLogger.java-logStarted-59] Started SupportershighUserBackendApplication in 3.73 seconds (process running for 4.145)
02:20:26.062 INFO  [restartedMain] [StartEventListener.java-onApplicationEvent-17] ApplicationReadyEvent: batch.issueCoupon=OFF
02:20:29.888 INFO  [http-nio-8093-exec-1] [DirectJDKLog.java-log-168] Initializing Spring DispatcherServlet 'dispatcherServlet'
02:20:29.888 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-532] Initializing Servlet 'dispatcherServlet'
02:20:29.888 INFO  [http-nio-8093-exec-1] [FrameworkServlet.java-initServletBean-554] Completed initialization in 0 ms
02:20:29.998 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
02:20:29.999 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : loginAccount, 파라미터 : [request, response, memberLoginRequestDto]
02:20:29.999 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
02:20:29.999 INFO  [http-nio-8093-exec-1] [MemberController.java-loginAccount-73] [Member] 로그인
02:20:30.003 INFO  [http-nio-8093-exec-1] [MemberService.java-loginAccount-161] 계정 로그인 service
02:20:30.208 INFO  [http-nio-8093-exec-1] [UserDetailsServiceImpl.java-loadUserByUsername-27] 유저 계정 존재 (고객) : wlstpgns51@naver.com
02:20:30.209 INFO  [http-nio-8093-exec-1] [UserDetailsServiceImpl.java-createUserDetailsOfMember-36] 회원용 createUserDetails 실행
02:20:30.262 INFO  [http-nio-8093-exec-1] [JwtTokenProvider.java-generateToken-57] 권한 정보 확인 : ROLE_client
02:20:30.318 INFO  [http-nio-8093-exec-1] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.loginAccount(HttpServletRequest,HttpServletResponse,MemberLoginRequestDto) 실행 시간 : 319 ms
02:20:30.318 INFO  [http-nio-8093-exec-1] [MethodCallMonitorAspect.java-methodCallLog-32] loginAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:21:01.325 INFO  [http-nio-8093-exec-3] [JwtTokenProvider.java-validateToken-134] validateToken 함수 진입 : 토큰 Provider 에서 검증할 토큰을 가지고 왔는지 확인
02:21:01.325 INFO  [http-nio-8093-exec-3] [JwtTokenProvider.java-validateToken-137] Checking JWT Token
02:21:01.339 INFO  [http-nio-8093-exec-3] [JwtTokenProvider.java-validateToken-139] Valid JWT Token
02:21:01.342 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-21] [AOP] 호출 함수 확인
02:21:01.342 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-24] 함수 : logoutAccount, 파라미터 : [request, response]
02:21:01.342 INFO  [http-nio-8093-exec-3] [TimeMonitorAspect.java-logTime-20] [AOP] 함수 실행 시간 로깅
02:21:01.342 INFO  [http-nio-8093-exec-3] [MemberController.java-logoutAccount-91] [Member] 로그아웃
02:21:01.343 INFO  [http-nio-8093-exec-3] [MemberService.java-logoutAccount-225] 계정 로그아웃 service
02:21:01.343 INFO  [http-nio-8093-exec-3] [JwtTokenProvider.java-getMemberFromAuthentication-119] authentication 계정 이메일 아이디 - wlstpgns51@naver.com
02:21:01.357 INFO  [http-nio-8093-exec-3] [MemberService.java-logoutAccount-243] 확인1 : Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ3bHN0cGduczUxQG5hdmVyLmNvbSIsImF1dGgiOiJjbGllbnQiLCJleHAiOjE3NTY1NzQ0MzB9.-Hrz7RnIfgCmMckqbH7ZibiuxnG68Xk2i7JqPV5hTa8
02:21:01.358 INFO  [http-nio-8093-exec-3] [MemberService.java-logoutAccount-244] 확인2 : null
02:21:01.371 INFO  [http-nio-8093-exec-3] [TimeMonitorAspect.java-logTime-32] ResponseEntity sh.user.supportershighuserbackend.member.controller.MemberController.logoutAccount(HttpServletRequest,HttpServletResponse) 실행 시간 : 29 ms
02:21:01.372 INFO  [http-nio-8093-exec-3] [MethodCallMonitorAspect.java-methodCallLog-32] logoutAccount 함수 정상 반환 데이터 : public class org.springframework.http.ResponseEntity<T>
02:30:14.280 INFO  [SpringApplicationShutdownHook] [CloseEventListener.java-onApplicationEvent-15] CloseEventListener!!
02:30:14.283 INFO  [SpringApplicationShutdownHook] [GracefulShutdown.java-shutDownGracefully-54] Commencing graceful shutdown. Waiting for active requests to complete
02:30:14.285 INFO  [tomcat-shutdown] [GracefulShutdown.java-doShutdown-76] Graceful shutdown complete
02:30:14.303 INFO  [SpringApplicationShutdownHook] [AbstractEntityManagerFactoryBean.java-destroy-660] Closing JPA EntityManagerFactory for persistence unit 'default'
02:30:14.305 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-349] HikariPool-1 - Shutdown initiated...
02:30:14.306 INFO  [SpringApplicationShutdownHook] [HikariDataSource.java-close-351] HikariPool-1 - Shutdown completed.
